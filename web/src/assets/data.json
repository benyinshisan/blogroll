[
  {
    "name": "TomyJan's BLOG",
    "xmlUrl": "https://rsshub.benyinshisan.cf/blogs/wordpress/blog.tomys.top",
    "htmlUrl": "https://blog.tomys.top/",
    "title": "TJSRL 食用教程|发布页面 – 一个第三方星穹铁道启动器",
    "link": "https://blog.tomys.top/2023-04/starraillauncher/",
    "summary": "TJSRL 食用教程|发布页面 – 一个第三方星穹铁道启动器",
    "pubDate": "2023-04-24T13:56:40.000Z",
    "pubDateYYMMDD": "2023-04-24"
  },
  {
    "name": "SYH",
    "xmlUrl": "https://rsshub.benyinshisan.cf/hexo/next/syh521.cn",
    "htmlUrl": "http://syh521.cn/",
    "title": "洛谷P4555 [国家集训队] 最长双回文串",
    "link": "http://syh521.cn/2023/04/21/Luogu-P4555/",
    "summary": "传送门 Manacher解法如果你还不会manacher请看这里 考虑遍历所有这样的形式，$l_i$表示$i$为结尾的最长的回文串长度,$r_i$表示$i$为开头的… 至于怎么得到呢？显然我们每次更新$d_1[i],d_2[i]$的时候，都可以更新一些$l_i,r_i$ 如何得到剩下的$l_i,r_i$？只要用已有的最大值递推即可，从结尾往回推，$l_i=\\max{(l_{i+2}-2,l_i)}$ 同理$r_...",
    "pubDate": "2023-04-20T16:00:00.000Z",
    "pubDateYYMMDD": "2023-04-20"
  },
  {
    "name": "benyinshisan's Blog",
    "xmlUrl": "https://rsshub.benyinshisan.cf/hexo/next/benyinshisan.cf",
    "htmlUrl": "https://benyinshisan.cf/",
    "title": "交换网络",
    "link": "http://benyinshisan.cf/posts/46462.html",
    "summary": "交换网络的基本概念 交换系统的根本就是交换网络 交换的最基本功能是在任意的入线与出线之间建立连接 构成交换网络的最小单位是交换单元 交换网络由交换单元按照一定的拓扑结构和控制方式决定（第二个三要素 交换网络图1 CLOS网络 交换网络分类－－单级交换网络和多级交换网络 单级交换网络：交换网络入线到出线只经过一个交换单元，并且同一级多个交换单元构成时，不同交换单元入线与出线之间可建立连接 多级交换网络： 1....",
    "pubDate": "2023-04-19T14:38:20.000Z",
    "pubDateYYMMDD": "2023-04-19"
  },
  {
    "name": "SYH",
    "xmlUrl": "https://rsshub.benyinshisan.cf/hexo/next/syh521.cn",
    "htmlUrl": "http://syh521.cn/",
    "title": "龙书笔记1 - 模糊概念、杂项知识",
    "link": "http://syh521.cn/2023/04/15/Note-dragon1/",
    "summary": "虽然知乎上看到另一本书 Compiler Construction - Principles and Practice 作为入门可能会更好，不过在寄过来之前还有一段时间，我并没有太多时间可以磨蹭，于是先来图书馆看龙书了（上面提到的那本很老的书图书馆居然有！居然是在兰工坪！真的让人很难绷得住😅） 已有的准备事实上并不是很充分，我并没有很好的学习C++...",
    "pubDate": "2023-04-14T16:00:00.000Z",
    "pubDateYYMMDD": "2023-04-14"
  },
  {
    "name": "SYH",
    "xmlUrl": "https://rsshub.benyinshisan.cf/hexo/next/syh521.cn",
    "htmlUrl": "http://syh521.cn/",
    "title": "Codeforces Round 864「Div. 2」",
    "link": "http://syh521.cn/2023/04/10/Codeforces-CFR864/",
    "summary": "越来越感觉前面几题浪费时间了 （对想题能力没有什么提升 实现和具体的考虑则需要更专注一点） 这两天看老番 佐贺偶像是传奇 感觉很好看 很鲜活有感染力 然而今天不怎么在状态 人有点消沉 不知道是不是熬夜的缘故 A 阅读理解题 一条线除了两段不能经过坐标点 submission B 显然1-n要在减的位置上 看样例猜了个结论: 2n和2n-1都要在必经点上 submission C 维持单调性...",
    "pubDate": "2023-04-09T16:00:00.000Z",
    "pubDateYYMMDD": "2023-04-09"
  },
  {
    "name": "benyinshisan's Blog",
    "xmlUrl": "https://rsshub.benyinshisan.cf/hexo/next/benyinshisan.cf",
    "htmlUrl": "https://benyinshisan.cf/",
    "title": "vscode配置verilog环境",
    "link": "http://benyinshisan.cf/posts/29040.html",
    "summary": "iverilog与ctags： 下载最新iverilog，安装时注意勾选Add PATH选项 下载最新ctags，安装时注意勾选Add PATH选项 vscode部分 三个主要插件 三个主要插件 Verilog-HDL/SystemVerilog/Bluespec SystemVerilog...",
    "pubDate": "2023-04-01T04:58:20.000Z",
    "pubDateYYMMDD": "2023-04-01"
  },
  {
    "name": "SYH",
    "xmlUrl": "https://rsshub.benyinshisan.cf/hexo/next/syh521.cn",
    "htmlUrl": "http://syh521.cn/",
    "title": "值类别和引用浅析",
    "link": "http://syh521.cn/2023/03/24/Note-ValueCategory&referrence/",
    "summary": "本文使用的Clang/LLVM环境： llvm 16.0 clang -v:  Homebrew clang version 16.0.0  Target: arm64-apple-darwin22.1.0  Thread model: posix 此文中对象的概念沿用primer的说法，即认为对象是具有某种数据类型的内存空间 引用平时说的引用 reference 一般是指左值引用 即lvalue...",
    "pubDate": "2023-03-23T16:00:00.000Z",
    "pubDateYYMMDD": "2023-03-23"
  },
  {
    "name": "SYH",
    "xmlUrl": "https://rsshub.benyinshisan.cf/hexo/next/syh521.cn",
    "htmlUrl": "http://syh521.cn/",
    "title": "后缀数组(SA) 学习笔记",
    "link": "http://syh521.cn/2023/03/22/Algorithm-sa/",
    "summary": "天梯赛校赛碰到的 本以为切个水题 没想到捅了老挝 甚至还有n,q=10w的区间众数 2333 就是数据比较水 感觉严一点分块都不一定能过 原题貌似是这个 但是他妈的校赛n改到了2w 一开始感觉是差分+lcs或kmp之类的 然后感觉不太对劲… 还是需要一些处理字符串的手段 于是学一下SA和SAM...",
    "pubDate": "2023-03-21T16:00:00.000Z",
    "pubDateYYMMDD": "2023-03-21"
  },
  {
    "name": "琅時壹",
    "xmlUrl": "https://rsshub.benyinshisan.cf/csdn/blog/qq_62852431",
    "htmlUrl": "https://blog.csdn.net/qq_62852431",
    "title": "浅谈c++引用",
    "link": "https://blog.csdn.net/qq_62852431/article/details/129134660",
    "summary": "浅谈c++ 兰理鲲鹏展翅 在这里开设 > 系列专题,针对C++重点内容展开探讨与观察底层,同时也是一个面试专栏,所选知识大多为面试常见问题.前期较为基础,难度会逐渐上升哦~ 本专栏采用经典的哲学三段论编写:是什么|为什么|怎么做 力图精简,高效. 第一章: 浅谈C++函数重载     传送门  浅谈c++什么是引用为什么存在引用我们平常如何使用引用常引用两个重要使用场景做参数做返回值     ...",
    "pubDate": "2023-02-20T23:00:00.000Z",
    "pubDateYYMMDD": "2023-02-20"
  },
  {
    "name": "琅時壹",
    "xmlUrl": "https://rsshub.benyinshisan.cf/csdn/blog/qq_62852431",
    "htmlUrl": "https://blog.csdn.net/qq_62852431",
    "title": "浅谈C++函数重载",
    "link": "https://blog.csdn.net/qq_62852431/article/details/129093935",
    "summary": "C++相较于C语言来说,重载是一重大特性,让我们一起简单的回顾一下重载那些事     传送门  函数重载是什么为什么有函数重载函数重载是如何实现的总结    函数重载是什么 函数重载:是函数的一种特殊情况,C++允许在同一作用域中声明几个功能相似的同名函数 这些同名函数的形参列表(参数个数or类型or顺序)必须不同   为什么有函数重载...",
    "pubDate": "2023-02-17T15:16:59.000Z",
    "pubDateYYMMDD": "2023-02-17"
  },
  {
    "name": "Angels-D",
    "xmlUrl": "https://angels-d.github.io/atom.xml",
    "htmlUrl": "https://angels-d.github.io/",
    "title": "鲲鹏计算使用体验",
    "link": "https://angels-d.github.io/2022/05/31/kun-peng-ji-suan-shi-yong-ti-yan-zong-jie/",
    "summary": "<a href=\"#鲲鹏计算使用体验\" class=\"headerlink\"",
    "pubDate": "2023-01-05T12:09:20.770Z",
    "pubDateYYMMDD": "2023-01-05"
  },
  {
    "name": "Bearyuc's Note",
    "xmlUrl": "https://rsshub.benyinshisan.cf/hexo/next/bearyuc.cn",
    "htmlUrl": "https://bearyuc.cn/",
    "title": "模板",
    "link": "http://bearyuc.cn/2022/11/02/%E6%A8%A1%E6%9D%BF/",
    "summary": "快速排序算法模板12345678910111213void quick_sort(int q[], int l, int r){    if (l >= r) return;    int i = l - 1, j = r + 1, x = q[l + r >> 1];    while (i     {        do i ++ ; while (q[i]         do j -- ; while...",
    "pubDate": "2022-11-02T11:41:10.000Z",
    "pubDateYYMMDD": "2022-11-02"
  },
  {
    "name": "Bearyuc's Note",
    "xmlUrl": "https://rsshub.benyinshisan.cf/hexo/next/bearyuc.cn",
    "htmlUrl": "https://bearyuc.cn/",
    "title": "图论",
    "link": "http://bearyuc.cn/2022/11/02/%E5%9B%BE%E8%AE%BA/",
    "summary": "邻接树与图的存储树是一种特殊的图，与图的存储方式相同。对于无向图中的边ab，存储两条有向边a->b, b->a。因此我们可以只考虑有向图的存储。 (1) 邻接矩阵：g[a][b] 存储边a->b (2) 邻接表： 123456789101112// 对于每个点k，开一个单链表，存储k所有可以走到的点。h[k]存储这个单链表的头结点int h[N], e[N], ne[N], idx;//...",
    "pubDate": "2022-11-02T11:41:10.000Z",
    "pubDateYYMMDD": "2022-11-02"
  },
  {
    "name": "Bearyuc's Note",
    "xmlUrl": "https://rsshub.benyinshisan.cf/hexo/next/bearyuc.cn",
    "htmlUrl": "https://bearyuc.cn/",
    "title": "高精度运算",
    "link": "http://bearyuc.cn/2022/10/26/%E9%AB%98%E7%B2%BE%E5%BA%A6%E8%BF%90%E7%AE%97/",
    "summary": "高精度加法123456789101112131415161718// C = A + B, A >= 0, B >= 0vector add(vector &A, vector &B){    if (A.size()     vector C;    int t = 0;    for (int i = 0; i     {        t += A[i];        if (i        ...",
    "pubDate": "2022-10-26T22:02:05.000Z",
    "pubDateYYMMDD": "2022-10-26"
  },
  {
    "name": "Bearyuc's Note",
    "xmlUrl": "https://rsshub.benyinshisan.cf/hexo/next/bearyuc.cn",
    "htmlUrl": "https://bearyuc.cn/",
    "title": "排序模板",
    "link": "http://bearyuc.cn/2022/10/25/%E6%8E%92%E5%BA%8F%E6%A8%A1%E6%9D%BF/",
    "summary": "快速排序模板 12345678910111213void quick_sort(int q[], int l, int r){    if (l >= r) return;    int i = l - 1, j = r + 1, x = q[l + r >> 1];    while (i     {        do i ++ ; while (q[i]         do j -- ; while...",
    "pubDate": "2022-10-25T19:36:56.000Z",
    "pubDateYYMMDD": "2022-10-25"
  },
  {
    "name": "Bearyuc's Note",
    "xmlUrl": "https://rsshub.benyinshisan.cf/hexo/next/bearyuc.cn",
    "htmlUrl": "https://bearyuc.cn/",
    "title": "位运算与常用库函数（C ++）",
    "link": "http://bearyuc.cn/2022/10/23/%E4%BD%8D%E8%BF%90%E7%AE%97%E4%B8%8E%E5%B8%B8%E7%94%A8%E5%BA%93%E5%87%BD%E6%95%B0%EF%BC%88C-%EF%BC%89/",
    "summary": "位运算与常用库函数（C ++）123456789101112131415                                       位运算符号运算&与|或~非^异或>>右移  /2^k常用操作：求x的第k位数字 x >> k & 1lowbit(x) = x & -x（~ a +1），返回x的最后一位1 2....",
    "pubDate": "2022-10-23T13:37:24.000Z",
    "pubDateYYMMDD": "2022-10-23"
  },
  {
    "name": "琅時壹",
    "xmlUrl": "https://rsshub.benyinshisan.cf/csdn/blog/qq_62852431",
    "htmlUrl": "https://blog.csdn.net/qq_62852431",
    "title": "【C++】【类和对象】的铺垫知识",
    "link": "https://blog.csdn.net/qq_62852431/article/details/124753274",
    "summary": "关于c++的笔记系列如何开始思考了好多，因为笔者对笔记系列博客的目的不仅是为了作为以后的复习方法，也有极大的目的是吸引阅读量，好为日后一些较高层次的文章做铺垫。但是，c++作为一门较难入门的语言来说，第二点暂且搁置。本文就简单按照笔者学习的顺序对一些重难点做出整理。 (❁´◡`❁)     文章目录  前言一、命名空间二、输入输出三，缺省函数函数重载引用其他内联函数auto关键字空指针  ...",
    "pubDate": "2022-10-10T09:23:40.000Z",
    "pubDateYYMMDD": "2022-10-10"
  },
  {
    "name": "TomyJan's BLOG",
    "xmlUrl": "https://rsshub.benyinshisan.cf/blogs/wordpress/blog.tomys.top",
    "htmlUrl": "https://blog.tomys.top/",
    "title": "一抹憨色 开箱",
    "link": "https://blog.tomys.top/2022-09/hansersfirstalbum/",
    "summary": "一抹憨色 开箱",
    "pubDate": "2022-09-19T15:03:26.000Z",
    "pubDateYYMMDD": "2022-09-19"
  },
  {
    "name": "琅時壹",
    "xmlUrl": "https://rsshub.benyinshisan.cf/csdn/blog/qq_62852431",
    "htmlUrl": "https://blog.csdn.net/qq_62852431",
    "title": "【 失踪人口回归】新·学期",
    "link": "https://blog.csdn.net/qq_62852431/article/details/126800441",
    "summary": "失踪人口回归   看板娘已经快半年没有更新博客啦，对不起各位，也悔恨自己的摆烂😶‍🌫️  这次有幸由学长邀请参加兰州理工大学开学征文活动，新学期？😍   认真学习？ 不水每一节课？ 每天坚持编程？ 每天坚持锻炼？ 坚持写作？  FLAG立起来！！！ 新学期，新FLAG#  一、不怎么重要的自我介绍  ...",
    "pubDate": "2022-09-10T17:16:24.000Z",
    "pubDateYYMMDD": "2022-09-10"
  },
  {
    "name": "TomyJan's BLOG",
    "xmlUrl": "https://rsshub.benyinshisan.cf/blogs/wordpress/blog.tomys.top",
    "htmlUrl": "https://blog.tomys.top/",
    "title": "密码保护：StarRailTJ | 逸一时误一世",
    "link": "https://blog.tomys.top/2022-08/starrailtj/",
    "summary": "密码保护：StarRailTJ | 逸一时误一世",
    "pubDate": "2022-08-03T05:57:04.000Z",
    "pubDateYYMMDD": "2022-08-03"
  },
  {
    "name": "TomyJan's BLOG",
    "xmlUrl": "https://rsshub.benyinshisan.cf/blogs/wordpress/blog.tomys.top",
    "htmlUrl": "https://blog.tomys.top/",
    "title": "TJGL 食用教程|发布页面 – 一个第三方原神启动器",
    "link": "https://blog.tomys.top/2022-07/genshinlauncher/",
    "summary": "TJGL 食用教程|发布页面 – 一个第三方原神启动器",
    "pubDate": "2022-07-18T07:57:51.000Z",
    "pubDateYYMMDD": "2022-07-18"
  },
  {
    "name": "TomyJan's BLOG",
    "xmlUrl": "https://rsshub.benyinshisan.cf/blogs/wordpress/blog.tomys.top",
    "htmlUrl": "https://blog.tomys.top/",
    "title": "小站运行两年了",
    "link": "https://blog.tomys.top/2022-07/2years/",
    "summary": "小站运行两年了",
    "pubDate": "2022-07-15T10:22:35.000Z",
    "pubDateYYMMDD": "2022-07-15"
  },
  {
    "name": "Angels-D",
    "xmlUrl": "https://angels-d.github.io/atom.xml",
    "htmlUrl": "https://angels-d.github.io/",
    "title": "校友管理系统（面向对象课程设计）",
    "link": "https://angels-d.github.io/2021/07/08/xiao-you-guan-li-xi-tong-mian-xiang-dui-xiang-ke-cheng-she-ji/",
    "summary": "校友管理系统（面向对象课程设计）<a",
    "pubDate": "2022-05-31T06:32:53.033Z",
    "pubDateYYMMDD": "2022-05-31"
  },
  {
    "name": "TomyJan's BLOG",
    "xmlUrl": "https://rsshub.benyinshisan.cf/blogs/wordpress/blog.tomys.top",
    "htmlUrl": "https://blog.tomys.top/",
    "title": "关于上篇文章的维权经历",
    "link": "https://blog.tomys.top/2022-05/genshintj-rights/",
    "summary": "关于上篇文章的维权经历",
    "pubDate": "2022-05-07T14:26:18.000Z",
    "pubDateYYMMDD": "2022-05-07"
  },
  {
    "name": "TomyJan's BLOG",
    "xmlUrl": "https://rsshub.benyinshisan.cf/blogs/wordpress/blog.tomys.top",
    "htmlUrl": "https://blog.tomys.top/",
    "title": "GenshinTJ",
    "link": "https://blog.tomys.top/2022-04/genshintj/",
    "summary": "GenshinTJ",
    "pubDate": "2022-04-23T13:49:41.000Z",
    "pubDateYYMMDD": "2022-04-23"
  },
  {
    "name": "琅時壹",
    "xmlUrl": "https://rsshub.benyinshisan.cf/csdn/blog/qq_62852431",
    "htmlUrl": "https://blog.csdn.net/qq_62852431",
    "title": "【栈和队列】C语言简单应用 ⌊栈和队列互相实现，循环队列⌉",
    "link": "https://blog.csdn.net/qq_62852431/article/details/124230061",
    "summary": "栈和队列简单应用 通篇使用C语言实现 本文会直接使用写好的栈和队列，而且与上文为姐妹篇，好多内容是基于上文展开的。     不是重要目录  前言用栈实现队列使用C语言简单实现   用队列实现栈使用C语言简单实现   循环队列总结    前言   通过几道例题可以帮助熟悉栈和队列的性质与使用     栈是将数据由栈顶放入，但也只能由栈顶出数据只能通过栈顶操作。...",
    "pubDate": "2022-04-19T09:40:49.000Z",
    "pubDateYYMMDD": "2022-04-19"
  },
  {
    "name": "琅時壹",
    "xmlUrl": "https://rsshub.benyinshisan.cf/csdn/blog/qq_62852431",
    "htmlUrl": "https://blog.csdn.net/qq_62852431",
    "title": "兰理鲲鹏-C语言简单的【栈和队列】（括号匹配问题）",
    "link": "https://blog.csdn.net/qq_62852431/article/details/124111941",
    "summary": "C语言实现简单数据结构 本系列全篇呈现C语言简单实现数据结构     不好看的目录  前言一、栈C语言简单实现栈   二、队列C语言简单实现队列   括号匹配问题总结    前言   摆烂一个月的大学生回来写栈和队列  通篇代码非常简单，且每一行都有注释，还有图示哦~   一、栈  ...",
    "pubDate": "2022-04-12T23:00:00.000Z",
    "pubDateYYMMDD": "2022-04-12"
  },
  {
    "name": "琅時壹",
    "xmlUrl": "https://rsshub.benyinshisan.cf/csdn/blog/qq_62852431",
    "htmlUrl": "https://blog.csdn.net/qq_62852431",
    "title": "【C语言】C语言中容易忽略的知识点与技巧---2",
    "link": "https://blog.csdn.net/qq_62852431/article/details/123547586",
    "summary": "我来填坑啦     不好看的目录  前言一、单目运算符二、输出转换语句总结    前言 上次的C语言总复习第二集  一、单目运算符 对读取的整数值进行符号取反操作并输出结果 #include int main() { int num; sscanf(\"%d\", &num); printf(\"num = %d\", num);//读取整数 printf(\"num = %d\",...",
    "pubDate": "2022-03-17T05:47:56.000Z",
    "pubDateYYMMDD": "2022-03-17"
  },
  {
    "name": "琅時壹",
    "xmlUrl": "https://rsshub.benyinshisan.cf/csdn/blog/qq_62852431",
    "htmlUrl": "https://blog.csdn.net/qq_62852431",
    "title": "都说C++难，那是没有学习数据结构【单链表】",
    "link": "https://blog.csdn.net/qq_62852431/article/details/123542116",
    "summary": "(❁´◡`❁) 单链表    可有可无的目录  前言一、链表是什么链表的分类二、链表的实现总结    前言 上篇顺序表结尾了解了顺序表的诸多缺点，链表的特性很好的解决了这些问题，本期我们来认识单链表。   一、链表是什么 链表是一种物理存储结构上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接依次实现的。 ...",
    "pubDate": "2022-03-17T04:27:18.000Z",
    "pubDateYYMMDD": "2022-03-17"
  },
  {
    "name": "琅時壹",
    "xmlUrl": "https://rsshub.benyinshisan.cf/csdn/blog/qq_62852431",
    "htmlUrl": "https://blog.csdn.net/qq_62852431",
    "title": "顺序表，你真的知道吗[SQL]",
    "link": "https://blog.csdn.net/qq_62852431/article/details/123521031",
    "summary": "(●’◡’●)     好看的目录  前言一、🐯顺序表是什么概念及结构   二、🤯顺序表的实现🐯顺序表的缺点😘几道练手题总结    前言 线性表是n个具有相同特性的数据元素的有限序列。线性表是一种在实际中广泛使用的数据结构，常见的线性表：顺序表、链表、栈、队列、字符串。...",
    "pubDate": "2022-03-16T13:16:00.000Z",
    "pubDateYYMMDD": "2022-03-16"
  },
  {
    "name": "TomyJan's BLOG",
    "xmlUrl": "https://rsshub.benyinshisan.cf/blogs/wordpress/blog.tomys.top",
    "htmlUrl": "https://blog.tomys.top/",
    "title": "安卓xposed模块整理存档",
    "link": "https://blog.tomys.top/2022-03/xposed-module/",
    "summary": "安卓xposed模块整理存档",
    "pubDate": "2022-03-01T13:04:18.000Z",
    "pubDateYYMMDD": "2022-03-01"
  },
  {
    "name": "TomyJan's BLOG",
    "xmlUrl": "https://rsshub.benyinshisan.cf/blogs/wordpress/blog.tomys.top",
    "htmlUrl": "https://blog.tomys.top/",
    "title": "Linux 常用命令存档(有兴趣就更新一下)",
    "link": "https://blog.tomys.top/2022-02/linux-shell/",
    "summary": "Linux 常用命令存档(有兴趣就更新一下)",
    "pubDate": "2022-02-20T05:03:09.000Z",
    "pubDateYYMMDD": "2022-02-20"
  },
  {
    "name": "琅時壹",
    "xmlUrl": "https://rsshub.benyinshisan.cf/csdn/blog/qq_62852431",
    "htmlUrl": "https://blog.csdn.net/qq_62852431",
    "title": "单片机电路基础《下》",
    "link": "https://blog.csdn.net/qq_62852431/article/details/122953809",
    "summary": "可有可无的目录  前言一、初始电路原理图二、单片机最小系统结构三、单片机工作的基本时序总结    前言 是单片机电路基础《上》的下集  一、初始电路原理图 只是认识一下不会一下子弄懂 原理图，顾名思义就是表示电路板上各器件之间连接原理的图表。学习单片机和学硬件电路设计都是通过分析电路原理图了解各种电子器件的功能和工作原理，才能得心应手开展工作。 原理图中常见的一些符号： ...",
    "pubDate": "2022-02-15T15:38:13.000Z",
    "pubDateYYMMDD": "2022-02-15"
  },
  {
    "name": "琅時壹",
    "xmlUrl": "https://rsshub.benyinshisan.cf/csdn/blog/qq_62852431",
    "htmlUrl": "https://blog.csdn.net/qq_62852431",
    "title": "单片机电路基础《上》",
    "link": "https://blog.csdn.net/qq_62852431/article/details/122933358",
    "summary": "开新坑，51单片机学习      不起眼的目录  前言一、电平特性51单片机IO口介绍初识电容电阻总结    前言 学习单片机需要一定的C语言以及电路基础，C语言不必多说，但电路是绝大单片机初学者的坑，不过关就难受  一、电平特性 单片机是一种数字集成芯片，数字电路中只有两种电平；高电平和低电平。5v等价于逻辑“1”，0v等价于逻辑“0”， 高电平：5v 低电平：0v...",
    "pubDate": "2022-02-14T15:19:40.000Z",
    "pubDateYYMMDD": "2022-02-14"
  },
  {
    "name": "琅時壹",
    "xmlUrl": "https://rsshub.benyinshisan.cf/csdn/blog/qq_62852431",
    "htmlUrl": "https://blog.csdn.net/qq_62852431",
    "title": "深度学习C语言——结构体",
    "link": "https://blog.csdn.net/qq_62852431/article/details/122927549",
    "summary": "不起眼  前言结构体结构体的声明结构体变量的定义和初始化结构体大小计算   枚举联合总结    前言 自定义类型连续剧  结构体 结构是一些值的集合，这些值称为成员变量。结构的每个成员是不同类型的变量。 为什么要有结构体 比如说，描述一个学生时，需要有 名字 性别 年龄 身高 来一起描述，需要不同的变量，便有了结构体类型来描述 结构体的声明 struct...",
    "pubDate": "2022-02-14T12:12:19.000Z",
    "pubDateYYMMDD": "2022-02-14"
  },
  {
    "name": "琅時壹",
    "xmlUrl": "https://rsshub.benyinshisan.cf/csdn/blog/qq_62852431",
    "htmlUrl": "https://blog.csdn.net/qq_62852431",
    "title": "【C语言】C语言中容易忽略的知识点与技巧",
    "link": "https://blog.csdn.net/qq_62852431/article/details/122794596",
    "summary": "这里是复习频道      不好看的目录  这里是复习频道🤷‍♀️前言🦔字符串常量🦔输出函数puts🦔除法运算的商和余数🦔获取整数的最后一行数字🐯除法运算的结果   🦔有关赋值🦔double类型的运算🦔数据类型和运算总结    🤷‍♀️前言...",
    "pubDate": "2022-02-07T10:02:10.000Z",
    "pubDateYYMMDD": "2022-02-07"
  },
  {
    "name": "琅時壹",
    "xmlUrl": "https://rsshub.benyinshisan.cf/csdn/blog/qq_62852431",
    "htmlUrl": "https://blog.csdn.net/qq_62852431",
    "title": "VS中为实现项目整洁进行模块分装后如何整合",
    "link": "https://blog.csdn.net/qq_62852431/article/details/122640581",
    "summary": "文章目录  前言game.h（头文件）test.c（测试文件，程序的主要框架）game.c（游戏文件）总结    前言 先前发布三子棋和扫雷，有朋友私信说不知道在VS中如何将不同文件的函数整合，我认为朋友使用的是vc6.0或dvc++，或者没有在较复杂的工程中分类分文件的习惯。这是扫雷链接 扫雷C语言实现 文章中我分了三个文件来编程 game.h（头文件）...",
    "pubDate": "2022-01-22T10:09:14.000Z",
    "pubDateYYMMDD": "2022-01-22"
  },
  {
    "name": "琅時壹",
    "xmlUrl": "https://rsshub.benyinshisan.cf/csdn/blog/qq_62852431",
    "htmlUrl": "https://blog.csdn.net/qq_62852431",
    "title": "学习C语言常见常用函数与模拟【深层理解】",
    "link": "https://blog.csdn.net/qq_62852431/article/details/122634518",
    "summary": "函数快速查找     文章目录  函数快速查找前言一、strlen与模拟实现模拟实现   二、strcpy与模拟实现模拟实现   三、strcat模拟实现   四、strcmp与模拟实现模拟实现   五、strstr与模拟实现模拟实现   六、strncpy七、strncat八、strncmp九、strtok十、strerror字符分类函数      十一、memcpy模拟实现  ...",
    "pubDate": "2022-01-22T03:08:40.000Z",
    "pubDateYYMMDD": "2022-01-22"
  },
  {
    "name": "琅時壹",
    "xmlUrl": "https://rsshub.benyinshisan.cf/csdn/blog/qq_62852431",
    "htmlUrl": "https://blog.csdn.net/qq_62852431",
    "title": "兰理鲲鹏-指针各类应用【大厂面试真题】",
    "link": "https://blog.csdn.net/qq_62852431/article/details/122573343",
    "summary": "指针各类应用及大厂面试真题解析     文章目录  指针各类应用及大厂面试真题解析前言一、我们目前掌握的指针1.字符指针相关面试题拓展：const修饰指针const在*左边const在*右边const在*左右都有        2.数组指针数组传参函数指针   重点二、指针和数组笔试题解析铺垫1.一维数组2.二维数组   三，面试真题总结    前言...",
    "pubDate": "2022-01-20T16:08:13.000Z",
    "pubDateYYMMDD": "2022-01-20"
  },
  {
    "name": "TomyJan's BLOG",
    "xmlUrl": "https://rsshub.benyinshisan.cf/blogs/wordpress/blog.tomys.top",
    "htmlUrl": "https://blog.tomys.top/",
    "title": "安卓抓包工具HttpCanary安装教程",
    "link": "https://blog.tomys.top/2022-01/httpcanary/",
    "summary": "安卓抓包工具HttpCanary安装教程",
    "pubDate": "2022-01-03T13:28:39.000Z",
    "pubDateYYMMDD": "2022-01-03"
  }
]